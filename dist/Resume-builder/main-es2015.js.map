{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/resume.ts","./src/app/script.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Resume, Experience, Education, Skill } from './resume';\nimport { ScriptService } from './script.service';\ndeclare let pdfMake: any ;\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  resume = new Resume();\n\n  \n\n  constructor(private scriptService: ScriptService) {\n    this.resume = JSON.parse(sessionStorage.getItem('resume')) || new Resume();\n    if (!this.resume.experiences || this.resume.experiences.length === 0) {\n      this.resume.experiences = [];\n      this.resume.experiences.push(new Experience());\n    }\n    if (!this.resume.educations || this.resume.educations.length === 0) {\n      this.resume.educations = [];\n      this.resume.educations.push(new Education());\n    }\n    if (!this.resume.skills || this.resume.skills.length === 0) {\n      this.resume.skills = [];\n      this.resume.skills.push(new Skill());\n    }\n\n    console.log('Loading External Scripts');\n    this.scriptService.load('pdfMake', 'vfsFonts');\n  }\n\n  addExperience() {\n    this.resume.experiences.push(new Experience());\n  }\n\n  addEducation() {\n    this.resume.educations.push(new Education());\n  }\n\n  generatePdf(action = 'open') {\n    console.log(pdfMake);\n    const documentDefinition = this.getDocumentDefinition();\n\n    switch (action) {\n      case 'open': pdfMake.createPdf(documentDefinition).open(); break;\n      case 'print': pdfMake.createPdf(documentDefinition).print(); break;\n      case 'download': pdfMake.createPdf(documentDefinition).download(); break;\n\n      default: pdfMake.createPdf(documentDefinition).open(); break;\n    }\n\n  }\n\n\n  resetForm() {\n    this.resume = new Resume();\n  }\n\n  getDocumentDefinition() {\n    sessionStorage.setItem('resume', JSON.stringify(this.resume));\n    return {\n      content: [\n        {\n          text: 'RESUME',\n          bold: true,\n          fontSize: 20,\n          alignment: 'center',\n          margin: [0, 0, 0, 20]\n        },\n        {\n          columns: [\n            [{\n              text: this.resume.name,\n              style: 'name'\n            },\n            {\n              text: this.resume.address\n            },\n            {\n              text: 'Email : ' + this.resume.email,\n            },\n            {\n              text: 'Contant No : ' + this.resume.contactNo,\n            },\n            {\n              text: 'Website : ' + this.resume.socialProfile,\n              link: this.resume.socialProfile,\n              color: 'blue',\n            }\n            ],\n            [\n              this.getProfilePicObject()\n            ]\n          ]\n        },\n        {\n          text: 'Skills',\n          style: 'header'\n        },\n        {\n          columns : [\n            {\n              ul : [\n                ...this.resume.skills.filter((value, index) => index % 3 === 0).map(s => s.value)\n              ]\n            },\n            {\n              ul : [\n                ...this.resume.skills.filter((value, index) => index % 3 === 1).map(s => s.value)\n              ]\n            },\n            {\n              ul : [\n                ...this.resume.skills.filter((value, index) => index % 3 === 2).map(s => s.value)\n              ]\n            }\n          ]\n        },\n        {\n          text: 'Experience',\n          style: 'header'\n        },\n        this.getExperienceObject(this.resume.experiences),\n\n        {\n          text: 'Education',\n          style: 'header'\n        },\n        this.getEducationObject(this.resume.educations),\n        {\n          text: 'Other Details',\n          style: 'header'\n        },\n        {\n          text: this.resume.otherDetails\n        },\n        {\n          text: 'Signature',\n          style: 'sign'\n        },\n        {\n          columns : [\n              { qr: this.resume.name + ', Contact No : ' + this.resume.contactNo, fit : 100 },\n              {\n              text: `(${this.resume.name})`,\n              alignment: 'right',\n              }\n          ]\n        }\n      ],\n      info: {\n        title: this.resume.name + '_RESUME',\n        author: this.resume.name,\n        subject: 'RESUME',\n        keywords: 'RESUME, ONLINE RESUME',\n      },\n        styles: {\n          header: {\n            fontSize: 18,\n            bold: true,\n            margin: [0, 20, 0, 10],\n            decoration: 'underline'\n          },\n          name: {\n            fontSize: 16,\n            bold: true\n          },\n          jobTitle: {\n            fontSize: 14,\n            bold: true,\n            italics: true\n          },\n          sign: {\n            margin: [0, 50, 0, 10],\n            alignment: 'right',\n            italics: true\n          },\n          tableHeader: {\n            bold: true,\n          }\n        }\n    };\n  }\n\n  getExperienceObject(experiences: Experience[]) {\n\n    const exs = [];\n\n    experiences.forEach(experience => {\n      exs.push(\n        [{\n          columns: [\n            [{\n              text: experience.jobTitle,\n              style: 'jobTitle'\n            },\n            {\n              text: experience.employer,\n            },\n            {\n              text: experience.jobDescription,\n            }],\n            {\n              text: 'Experience : ' + experience.experience + ' Months',\n              alignment: 'right'\n            }\n          ]\n        }]\n      );\n    });\n\n    return {\n      table: {\n        widths: ['*'],\n        body: [\n          ...exs\n        ]\n      }\n    };\n  }\n\n  getEducationObject(educations: Education[]) {\n    return {\n      table: {\n        widths: ['*', '*', '*', '*'],\n        body: [\n          [{\n            text: 'Degree',\n            style: 'tableHeader'\n          },\n          {\n            text: 'College',\n            style: 'tableHeader'\n          },\n          {\n            text: 'Passing Year',\n            style: 'tableHeader'\n          },\n          {\n            text: 'Result',\n            style: 'tableHeader'\n          },\n          ],\n          ...educations.map(ed => {\n            return [ed.degree, ed.college, ed.passingYear, ed.percentage];\n          })\n        ]\n      }\n    };\n  }\n\n  getProfilePicObject() {\n    if (this.resume.profilePic) {\n      return {\n        image: this.resume.profilePic ,\n        width: 75,\n        alignment : 'right'\n      };\n    }\n    return null;\n  }\n\n  fileChanged(e) {\n    const file = e.target.files[0];\n    this.getBase64(file);\n  }\n\n  getBase64(file) {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      console.log(reader.result);\n      this.resume.profilePic = reader.result as string;\n    };\n    reader.onerror = (error) => {\n      console.log('Error: ', error);\n    };\n  }\n\n  addSkill() {\n    this.resume.skills.push(new Skill());\n  }\n\n}\n","<nav class=\"navbar navbar-expand navbar-light bg-info d-flex justify-content-between\">\n  <div class=\"navbar-brand mb-0 h1 text-white\">RESUME BUILDER</div>\n  <div class=\"navbar-brand mb-0 h1 text-white\">\n    <a href=\"https://github.com/Ramratan-Bissoo\" class=\"text-white h3 mr-3\" title=\"GitHub\"><i\n        class=\"fab fa-github\"></i></a>\n    \n  </div>\n</nav>\n<div class=\"container-fluid\">\n  <form #resumeForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <div class=\"shadow-sm card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title d-flex align-items-center\">\n              <i class=\"material-icons\">\n                account_circle\n              </i>\n              Personal Details</h4>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.name\" name=\"name\" placeholder=\"Name\"\n                    #Name=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Name.invalid && (Name.touched || resumeForm.submitted) }\">\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-group\">\n                    <textarea class=\"form-control\" [(ngModel)]=\"resume.address\" name=\"address\" rows=\"3\"\n                      placeholder=\"Address\" #Address=\"ngModel\" required\n                      [ngClass]=\"{'is-invalid': Address.invalid && (Address.touched || resumeForm.submitted) }\"></textarea>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.contactNo\" name=\"contactNo\"\n                    placeholder=\"Contact No.\" #ContactNo=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': ContactNo.invalid && (ContactNo.touched || resumeForm.submitted) }\">\n                </div>\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.email\" name=\"emailId\"\n                    placeholder=\"Email ID\" #Email=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Email.invalid && (Email.touched || resumeForm.submitted) }\">\n                </div>\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.socialProfile\" name=\"socialProfile\"\n                    placeholder=\"Website \">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Skills -->\n        <div class=\"shadow-sm card\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between card-title\">\n              <h4 class=\"d-flex align-items-center\">\n                <i class=\"material-icons\">\n                  timeline\n                </i>\n                Skills</h4>\n              <button class=\"btn btn-info\" (click)=\"addSkill()\">+</button>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-4\" *ngFor=\"let s of resume.skills; let i=index\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" name=\"skill{{i}}\" [(ngModel)]=\"s.value\"\n                    placeholder=\"e.g. Java / Angular / .Net \" #Skill=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Skill.invalid && (Skill.touched || resumeForm.submitted) }\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <!-- Experience -->\n        <div class=\"shadow-sm card\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between card-title\">\n              <h4 class=\"d-flex align-items-center\">\n                <i class=\"material-icons\">\n                  timeline\n                </i>\n                Experience</h4>\n              <button class=\"btn btn-info\" (click)=\"addExperience()\">+</button>\n            </div>\n            <div class=\"row\" *ngFor=\"let ex of resume.experiences; let i=index\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" name=\"employer{{i}}\" [(ngModel)]=\"ex.employer\"\n                    placeholder=\"Employer\" #Employer=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Employer.invalid && (Employer.touched || resumeForm.submitted) }\">\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-group\">\n                    <textarea class=\"form-control\" name=\"jobDescription{{i}}\" [(ngModel)]=\"ex.jobDescription\" rows=\"3\"\n                      placeholder=\"Job Description\"></textarea>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" name=\"jobTitle{{i}}\" [(ngModel)]=\"ex.jobTitle\"\n                    placeholder=\"Job Title\" #JobTitle=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': JobTitle.invalid && (JobTitle.touched || resumeForm.submitted) }\">\n                </div>\n                <div class=\"form-group\">\n                  <input type=\"number\" class=\"form-control\" name=\"exInMonths{{i}}\" [(ngModel)]=\"ex.experience\"\n                    placeholder=\"Experience in months\" #Experience=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Experience.invalid && (Experience.touched || resumeForm.submitted) }\">\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <!-- Education -->\n        <div class=\"shadow-sm card\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between card-title\">\n              <h4 class=\"d-flex align-items-center\">\n                <i class=\"material-icons\">\n                  school\n                </i>\n                Education</h4>\n              <button class=\"btn btn-info\" (click)=\"addEducation()\">+</button>\n            </div>\n            <div class=\"row\" *ngFor=\"let ed of resume.educations; let i=index\">\n              <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Degree\" name=\"degree{{i}}\" [(ngModel)]=\"ed.degree\"\n                    #Degree=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Degree.invalid && (Degree.touched || resumeForm.submitted) }\">\n                    \n                  \n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" name=\"college{{i}}\" [(ngModel)]=\"ed.college\"\n                    placeholder=\"School/College\" #College=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': College.invalid && (College.touched || resumeForm.submitted) }\">\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                  <input type=\"number\" class=\"form-control\" name=\"passingYear{{i}}\" [(ngModel)]=\"ed.passingYear\"\n                    placeholder=\"Passing Year\" #PassingYear=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': PassingYear.invalid && (PassingYear.touched || resumeForm.submitted) }\">\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                  <input type=\"number\" class=\"form-control\" name=\"result{{i}}\" [(ngModel)]=\"ed.percentage\"\n                    placeholder=\"Percentage\" #Percentage=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Percentage.invalid && (Percentage.touched || resumeForm.submitted) }\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Other Details -->\n\n        <div class=\"shadow-sm card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title d-flex align-items-center\">\n              <i class=\"material-icons\"> list </i>Other Details</h4>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.otherDetails\" name=\"otherDetails\"\n                    rows=\"4\"></textarea>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"shadow-sm card action-buttons\">\n          <button (click)=\"resumeForm.valid ? generatePdf('open') : ''\"\n            class=\"btn btn-info d-flex align-items-center justify-content-center\">\n            <i class=\"material-icons\">\n              picture_as_pdf\n            </i> <span>Open PDF</span></button>\n          <button (click)=\"resumeForm.valid ? generatePdf('download') : ''\"\n            class=\"btn btn-info d-flex align-items-center justify-content-center\">\n            <i class=\"material-icons\">\n              cloud_download\n            </i><span>Download PDF</span></button>\n          <button (click)=\"resumeForm.valid ? generatePdf('print') : ''\"\n            class=\"btn btn-info d-flex align-items-center justify-content-center\">\n            <i class=\"material-icons\">\n              print\n            </i><span>Print PDF</span></button>\n\n          <button type='reset' (click)=\"resetForm()\"\n            class=\"btn btn-info d-flex align-items-center justify-content-center\">\n            <i class=\"material-icons\">\n              clear\n            </i><span>Reset</span></button>\n        </div>\n\n        <div class=\"card p-4\">\n          <div class=\"form-group\">\n            <label class=\"h4 mb-3\" for=\"\">Photo in Resume</label>\n            <input type=\"file\" class=\"form-control-file\" (change)=\"fileChanged($event)\" aria-describedby=\"fileHelpId\">\n          </div>\n          <img *ngIf=\"resume.profilePic\" [src]=\"resume.profilePic\" class=\"img-thumbnail\">\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Resume {\n    profilePic: string;\n    name: string;\n    address: string;\n    contactNo: number;\n    email: string;\n    socialProfile: string;\n    experiences: Experience[] = [];\n    educations: Education[] = [];\n    otherDetails: string;\n    skills: Skill[] = [];\n\n    constructor() {\n        this.experiences.push(new Experience());\n        this.educations.push(new Education());\n        this.skills.push(new Skill());\n    }\n}\n\nexport class Experience {\n    employer: string;\n    jobTitle: string;\n    jobDescription: string;\n    startDate: string;\n    experience: number;\n}\n\nexport class Education {\n    degree: string;\n    college: string;\n    passingYear: string;\n    percentage: number;\n}\n\nexport class Skill {\n    value: string;\n}\n","import { Injectable } from '@angular/core';\n\ninterface Scripts {\n  name: string;\n  src: string;\n}\nexport const ScriptStore: Scripts[] = [\n  { name: 'pdfMake', src: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.59/pdfmake.min.js' },\n  { name: 'vfsFonts', src: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.59/vfs_fonts.js' }\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScriptService {\n\n  private scripts: any = {};\n\n  constructor() {\n    ScriptStore.forEach((script: any) => {\n      this.scripts[script.name] = {\n        loaded: false,\n        src: script.src\n      };\n    });\n  }\n\n  load(...scripts: string[]) {\n    const promises: any[] = [];\n    scripts.forEach((script) => promises.push(this.loadScript(script)));\n    return Promise.all(promises);\n  }\n\n  loadScript(name: string) {\n    return new Promise((resolve, reject) => {\n      // resolve if already loaded\n      if (this.scripts[name].loaded) {\n        resolve({ script: name, loaded: true, status: 'Already Loaded' });\n      } else {\n        // load script\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = this.scripts[name].src;\n        script.onload = () => {\n          this.scripts[name].loaded = true;\n          console.log(`${name} Loaded.`);\n          resolve({ script: name, loaded: true, status: 'Loaded' });\n        };\n        script.onerror = (error: any) => resolve({ script: name, loaded: false, status: 'Loaded' });\n        document.getElementsByTagName('head')[0].appendChild(script);\n      }\n    });\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}