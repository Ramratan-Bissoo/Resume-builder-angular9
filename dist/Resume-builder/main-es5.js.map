{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/resume.ts","webpack:///src/app/script.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","scriptService","resume","JSON","parse","sessionStorage","getItem","experiences","length","push","educations","skills","console","log","load","action","pdfMake","documentDefinition","getDocumentDefinition","createPdf","open","print","download","setItem","stringify","content","text","bold","fontSize","alignment","margin","columns","name","style","address","email","contactNo","socialProfile","link","color","getProfilePicObject","ul","filter","value","index","map","s","getExperienceObject","getEducationObject","otherDetails","qr","fit","info","title","author","subject","keywords","styles","header","decoration","jobTitle","italics","sign","tableHeader","exs","forEach","experience","employer","jobDescription","table","widths","body","ed","degree","college","passingYear","percentage","profilePic","image","width","file","target","files","getBase64","reader","FileReader","readAsDataURL","onload","result","onerror","error","addSkill","addExperience","addEducation","generatePdf","resetForm","fileChanged","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","Resume","Experience","Education","Skill","ScriptStore","src","ScriptService","scripts","script","loaded","promises","loadScript","all","reject","status","document","createElement","type","getElementsByTagName","appendChild","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Resume, Experience, Education, Skill } from './resume';\nimport { ScriptService } from './script.service';\ndeclare let pdfMake: any ;\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  resume = new Resume();\n\n  \n\n  constructor(private scriptService: ScriptService) {\n    this.resume = JSON.parse(sessionStorage.getItem('resume')) || new Resume();\n    if (!this.resume.experiences || this.resume.experiences.length === 0) {\n      this.resume.experiences = [];\n      this.resume.experiences.push(new Experience());\n    }\n    if (!this.resume.educations || this.resume.educations.length === 0) {\n      this.resume.educations = [];\n      this.resume.educations.push(new Education());\n    }\n    if (!this.resume.skills || this.resume.skills.length === 0) {\n      this.resume.skills = [];\n      this.resume.skills.push(new Skill());\n    }\n\n    console.log('Loading External Scripts');\n    this.scriptService.load('pdfMake', 'vfsFonts');\n  }\n\n  addExperience() {\n    this.resume.experiences.push(new Experience());\n  }\n\n  addEducation() {\n    this.resume.educations.push(new Education());\n  }\n\n  generatePdf(action = 'open') {\n    console.log(pdfMake);\n    const documentDefinition = this.getDocumentDefinition();\n\n    switch (action) {\n      case 'open': pdfMake.createPdf(documentDefinition).open(); break;\n      case 'print': pdfMake.createPdf(documentDefinition).print(); break;\n      case 'download': pdfMake.createPdf(documentDefinition).download(); break;\n\n      default: pdfMake.createPdf(documentDefinition).open(); break;\n    }\n\n  }\n\n\n  resetForm() {\n    this.resume = new Resume();\n  }\n\n  getDocumentDefinition() {\n    sessionStorage.setItem('resume', JSON.stringify(this.resume));\n    return {\n      content: [\n        {\n          text: 'RESUME',\n          bold: true,\n          fontSize: 20,\n          alignment: 'center',\n          margin: [0, 0, 0, 20]\n        },\n        {\n          columns: [\n            [{\n              text: this.resume.name,\n              style: 'name'\n            },\n            {\n              text: this.resume.address\n            },\n            {\n              text: 'Email : ' + this.resume.email,\n            },\n            {\n              text: 'Contant No : ' + this.resume.contactNo,\n            },\n            {\n              text: 'Website : ' + this.resume.socialProfile,\n              link: this.resume.socialProfile,\n              color: 'blue',\n            }\n            ],\n            [\n              this.getProfilePicObject()\n            ]\n          ]\n        },\n        {\n          text: 'Skills',\n          style: 'header'\n        },\n        {\n          columns : [\n            {\n              ul : [\n                ...this.resume.skills.filter((value, index) => index % 3 === 0).map(s => s.value)\n              ]\n            },\n            {\n              ul : [\n                ...this.resume.skills.filter((value, index) => index % 3 === 1).map(s => s.value)\n              ]\n            },\n            {\n              ul : [\n                ...this.resume.skills.filter((value, index) => index % 3 === 2).map(s => s.value)\n              ]\n            }\n          ]\n        },\n        {\n          text: 'Experience',\n          style: 'header'\n        },\n        this.getExperienceObject(this.resume.experiences),\n\n        {\n          text: 'Education',\n          style: 'header'\n        },\n        this.getEducationObject(this.resume.educations),\n        {\n          text: 'Other Details',\n          style: 'header'\n        },\n        {\n          text: this.resume.otherDetails\n        },\n        {\n          text: 'Signature',\n          style: 'sign'\n        },\n        {\n          columns : [\n              { qr: this.resume.name + ', Contact No : ' + this.resume.contactNo, fit : 100 },\n              {\n              text: `(${this.resume.name})`,\n              alignment: 'right',\n              }\n          ]\n        }\n      ],\n      info: {\n        title: this.resume.name + '_RESUME',\n        author: this.resume.name,\n        subject: 'RESUME',\n        keywords: 'RESUME, ONLINE RESUME',\n      },\n        styles: {\n          header: {\n            fontSize: 18,\n            bold: true,\n            margin: [0, 20, 0, 10],\n            decoration: 'underline'\n          },\n          name: {\n            fontSize: 16,\n            bold: true\n          },\n          jobTitle: {\n            fontSize: 14,\n            bold: true,\n            italics: true\n          },\n          sign: {\n            margin: [0, 50, 0, 10],\n            alignment: 'right',\n            italics: true\n          },\n          tableHeader: {\n            bold: true,\n          }\n        }\n    };\n  }\n\n  getExperienceObject(experiences: Experience[]) {\n\n    const exs = [];\n\n    experiences.forEach(experience => {\n      exs.push(\n        [{\n          columns: [\n            [{\n              text: experience.jobTitle,\n              style: 'jobTitle'\n            },\n            {\n              text: experience.employer,\n            },\n            {\n              text: experience.jobDescription,\n            }],\n            {\n              text: 'Experience : ' + experience.experience + ' Months',\n              alignment: 'right'\n            }\n          ]\n        }]\n      );\n    });\n\n    return {\n      table: {\n        widths: ['*'],\n        body: [\n          ...exs\n        ]\n      }\n    };\n  }\n\n  getEducationObject(educations: Education[]) {\n    return {\n      table: {\n        widths: ['*', '*', '*', '*'],\n        body: [\n          [{\n            text: 'Degree',\n            style: 'tableHeader'\n          },\n          {\n            text: 'College',\n            style: 'tableHeader'\n          },\n          {\n            text: 'Passing Year',\n            style: 'tableHeader'\n          },\n          {\n            text: 'Result',\n            style: 'tableHeader'\n          },\n          ],\n          ...educations.map(ed => {\n            return [ed.degree, ed.college, ed.passingYear, ed.percentage];\n          })\n        ]\n      }\n    };\n  }\n\n  getProfilePicObject() {\n    if (this.resume.profilePic) {\n      return {\n        image: this.resume.profilePic ,\n        width: 75,\n        alignment : 'right'\n      };\n    }\n    return null;\n  }\n\n  fileChanged(e) {\n    const file = e.target.files[0];\n    this.getBase64(file);\n  }\n\n  getBase64(file) {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      console.log(reader.result);\n      this.resume.profilePic = reader.result as string;\n    };\n    reader.onerror = (error) => {\n      console.log('Error: ', error);\n    };\n  }\n\n  addSkill() {\n    this.resume.skills.push(new Skill());\n  }\n\n}\n","<nav class=\"navbar navbar-expand navbar-light bg-info d-flex justify-content-between\">\n  <div class=\"navbar-brand mb-0 h1 text-white\">RESUME BUILDER</div>\n  <div class=\"navbar-brand mb-0 h1 text-white\">\n    <a href=\"https://github.com/Ramratan-Bissoo\" class=\"text-white h3 mr-3\" title=\"GitHub\"><i\n        class=\"fab fa-github\"></i></a>\n    \n  </div>\n</nav>\n<div class=\"container-fluid\">\n  <form #resumeForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <div class=\"shadow-sm card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title d-flex align-items-center\">\n              <i class=\"material-icons\">\n                account_circle\n              </i>\n              Personal Details</h4>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.name\" name=\"name\" placeholder=\"Name\"\n                    #Name=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Name.invalid && (Name.touched || resumeForm.submitted) }\">\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-group\">\n                    <textarea class=\"form-control\" [(ngModel)]=\"resume.address\" name=\"address\" rows=\"3\"\n                      placeholder=\"Address\" #Address=\"ngModel\" required\n                      [ngClass]=\"{'is-invalid': Address.invalid && (Address.touched || resumeForm.submitted) }\"></textarea>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.contactNo\" name=\"contactNo\"\n                    placeholder=\"Contact No.\" #ContactNo=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': ContactNo.invalid && (ContactNo.touched || resumeForm.submitted) }\">\n                </div>\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.email\" name=\"emailId\"\n                    placeholder=\"Email ID\" #Email=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Email.invalid && (Email.touched || resumeForm.submitted) }\">\n                </div>\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.socialProfile\" name=\"socialProfile\"\n                    placeholder=\"Website \">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Skills -->\n        <div class=\"shadow-sm card\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between card-title\">\n              <h4 class=\"d-flex align-items-center\">\n                <i class=\"material-icons\">\n                  timeline\n                </i>\n                Skills</h4>\n              <button class=\"btn btn-info\" (click)=\"addSkill()\">+</button>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-4\" *ngFor=\"let s of resume.skills; let i=index\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" name=\"skill{{i}}\" [(ngModel)]=\"s.value\"\n                    placeholder=\"e.g. Java / Angular / .Net \" #Skill=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Skill.invalid && (Skill.touched || resumeForm.submitted) }\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <!-- Experience -->\n        <div class=\"shadow-sm card\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between card-title\">\n              <h4 class=\"d-flex align-items-center\">\n                <i class=\"material-icons\">\n                  timeline\n                </i>\n                Experience</h4>\n              <button class=\"btn btn-info\" (click)=\"addExperience()\">+</button>\n            </div>\n            <div class=\"row\" *ngFor=\"let ex of resume.experiences; let i=index\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" name=\"employer{{i}}\" [(ngModel)]=\"ex.employer\"\n                    placeholder=\"Employer\" #Employer=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Employer.invalid && (Employer.touched || resumeForm.submitted) }\">\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-group\">\n                    <textarea class=\"form-control\" name=\"jobDescription{{i}}\" [(ngModel)]=\"ex.jobDescription\" rows=\"3\"\n                      placeholder=\"Job Description\"></textarea>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" name=\"jobTitle{{i}}\" [(ngModel)]=\"ex.jobTitle\"\n                    placeholder=\"Job Title\" #JobTitle=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': JobTitle.invalid && (JobTitle.touched || resumeForm.submitted) }\">\n                </div>\n                <div class=\"form-group\">\n                  <input type=\"number\" class=\"form-control\" name=\"exInMonths{{i}}\" [(ngModel)]=\"ex.experience\"\n                    placeholder=\"Experience in months\" #Experience=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Experience.invalid && (Experience.touched || resumeForm.submitted) }\">\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <!-- Education -->\n        <div class=\"shadow-sm card\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between card-title\">\n              <h4 class=\"d-flex align-items-center\">\n                <i class=\"material-icons\">\n                  school\n                </i>\n                Education</h4>\n              <button class=\"btn btn-info\" (click)=\"addEducation()\">+</button>\n            </div>\n            <div class=\"row\" *ngFor=\"let ed of resume.educations; let i=index\">\n              <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Degree\" name=\"degree{{i}}\" [(ngModel)]=\"ed.degree\"\n                    #Degree=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Degree.invalid && (Degree.touched || resumeForm.submitted) }\">\n                    \n                  \n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                  <input type=\"text\" class=\"form-control\" name=\"college{{i}}\" [(ngModel)]=\"ed.college\"\n                    placeholder=\"School/College\" #College=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': College.invalid && (College.touched || resumeForm.submitted) }\">\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                  <input type=\"number\" class=\"form-control\" name=\"passingYear{{i}}\" [(ngModel)]=\"ed.passingYear\"\n                    placeholder=\"Passing Year\" #PassingYear=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': PassingYear.invalid && (PassingYear.touched || resumeForm.submitted) }\">\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"form-group\">\n                  <input type=\"number\" class=\"form-control\" name=\"result{{i}}\" [(ngModel)]=\"ed.percentage\"\n                    placeholder=\"Percentage\" #Percentage=\"ngModel\" required\n                    [ngClass]=\"{'is-invalid': Percentage.invalid && (Percentage.touched || resumeForm.submitted) }\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Other Details -->\n\n        <div class=\"shadow-sm card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title d-flex align-items-center\">\n              <i class=\"material-icons\"> list </i>Other Details</h4>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.otherDetails\" name=\"otherDetails\"\n                    rows=\"4\"></textarea>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"shadow-sm card action-buttons\">\n          <button (click)=\"resumeForm.valid ? generatePdf('open') : ''\"\n            class=\"btn btn-info d-flex align-items-center justify-content-center\">\n            <i class=\"material-icons\">\n              picture_as_pdf\n            </i> <span>Open PDF</span></button>\n          <button (click)=\"resumeForm.valid ? generatePdf('download') : ''\"\n            class=\"btn btn-info d-flex align-items-center justify-content-center\">\n            <i class=\"material-icons\">\n              cloud_download\n            </i><span>Download PDF</span></button>\n          <button (click)=\"resumeForm.valid ? generatePdf('print') : ''\"\n            class=\"btn btn-info d-flex align-items-center justify-content-center\">\n            <i class=\"material-icons\">\n              print\n            </i><span>Print PDF</span></button>\n\n          <button type='reset' (click)=\"resetForm()\"\n            class=\"btn btn-info d-flex align-items-center justify-content-center\">\n            <i class=\"material-icons\">\n              clear\n            </i><span>Reset</span></button>\n        </div>\n\n        <div class=\"card p-4\">\n          <div class=\"form-group\">\n            <label class=\"h4 mb-3\" for=\"\">Photo in Resume</label>\n            <input type=\"file\" class=\"form-control-file\" (change)=\"fileChanged($event)\" aria-describedby=\"fileHelpId\">\n          </div>\n          <img *ngIf=\"resume.profilePic\" [src]=\"resume.profilePic\" class=\"img-thumbnail\">\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Resume {\n    profilePic: string;\n    name: string;\n    address: string;\n    contactNo: number;\n    email: string;\n    socialProfile: string;\n    experiences: Experience[] = [];\n    educations: Education[] = [];\n    otherDetails: string;\n    skills: Skill[] = [];\n\n    constructor() {\n        this.experiences.push(new Experience());\n        this.educations.push(new Education());\n        this.skills.push(new Skill());\n    }\n}\n\nexport class Experience {\n    employer: string;\n    jobTitle: string;\n    jobDescription: string;\n    startDate: string;\n    experience: number;\n}\n\nexport class Education {\n    degree: string;\n    college: string;\n    passingYear: string;\n    percentage: number;\n}\n\nexport class Skill {\n    value: string;\n}\n","import { Injectable } from '@angular/core';\n\ninterface Scripts {\n  name: string;\n  src: string;\n}\nexport const ScriptStore: Scripts[] = [\n  { name: 'pdfMake', src: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.59/pdfmake.min.js' },\n  { name: 'vfsFonts', src: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.59/vfs_fonts.js' }\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScriptService {\n\n  private scripts: any = {};\n\n  constructor() {\n    ScriptStore.forEach((script: any) => {\n      this.scripts[script.name] = {\n        loaded: false,\n        src: script.src\n      };\n    });\n  }\n\n  load(...scripts: string[]) {\n    const promises: any[] = [];\n    scripts.forEach((script) => promises.push(this.loadScript(script)));\n    return Promise.all(promises);\n  }\n\n  loadScript(name: string) {\n    return new Promise((resolve, reject) => {\n      // resolve if already loaded\n      if (this.scripts[name].loaded) {\n        resolve({ script: name, loaded: true, status: 'Already Loaded' });\n      } else {\n        // load script\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = this.scripts[name].src;\n        script.onload = () => {\n          this.scripts[name].loaded = true;\n          console.log(`${name} Loaded.`);\n          resolve({ script: name, loaded: true, status: 'Loaded' });\n        };\n        script.onerror = (error: any) => resolve({ script: name, loaded: false, status: 'Loaded' });\n        document.getElementsByTagName('head')[0].appendChild(script);\n      }\n    });\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}